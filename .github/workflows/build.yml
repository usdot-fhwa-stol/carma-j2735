name: CI

on:
  pull_request:
  push:

jobs:
  generate-asn-codecs:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/usdot-fhwa-stol/carma-builds-x64:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          ./install_dependencies.sh
      - name: Get SAE ASN
        uses: actions/checkout@v3
        with:
          repository: usdot-fhwa-stol/CARMASensitive
          ref: sae_asn
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}
          path: CARMASensitive
      - name: Copy SAE ASN
        run: |
          mkdir -p asn/sae
          cp "CARMASensitive/asn/J2735_201603DA_copyright_updated 12.2.ASN" asn/sae/J2735_201603DA.asn
      - name: Install ASN1C
        run: |
          ./install_asn1c.sh
      - name: Generate C and H files
        run: |
          ./generate.sh
          tar cvf generated_files.tar src include
      - name: Upload generated files
        uses: actions/upload-artifact@v3
        with:
          name: asn-generated-code
          path: generated_files.tar

  git-revision-info-get:
    uses: usdot-fhwa-stol/actions/.github/workflows/git-revision-info.yml@main

  build-package:
    strategy:
      matrix:
        architecture: [x64, armhf, arm64]
    runs-on: ubuntu-latest
    needs:
      - git-revision-info-get
      - generate-asn-codecs
    container:
      image: ghcr.io/usdot-fhwa-stol/carma-builds-${{ matrix.architecture }}:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        uses: usdot-fhwa-stol/actions/build-cpp-library@main
        with:
          package-version-suffix: ${{ needs.git-revision-info-get.outputs.git-revision-info }}
      - name: Upload deb artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deb-packages-${{ matrix.architecture }}
          path: build*/_packages/*.deb

  deb-s3-upload:
    runs-on: ubuntu-latest
    needs:
      - build-package
    container:
      image: ghcr.io/usdot-fhwa-stol/actions-deb-s3:main
    steps:
      - name: Publish deb artifacts
        uses: usdot-fhwa-stol/actions/deb-s3-upload@main
        with:
          artifact-name: deb-packages-${{ matrix.architecture }}
          aws-access-key-id: ${{ secrets.APT_REPO_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.APT_REPO_AWS_SECRET_ACCESS_KEY }}
